package com.java.thread;

public class ThreadProg extends Thread {

	public void run() {
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		System.out.println("MyThread is runnning...");
		
		try {
			thread.wait();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
	}

	public static void main(String[] args) {

		ThreadProg thread = new ThreadProg();

		System.out.println("Thread State : " + thread.getState());

		thread.setPriority(NORM_PRIORITY);//MAX_PRIORITY(10) ,NORM_PRIORITY(5) , MIN_PRIORITY(0)

		thread.setName("MyThread");

		// Set Daemon Thread -- True
		thread.setDaemon(true);

		// Invokes run() method implicitly
		thread.start();
		

		//Thread STATES --> NEW , RUNNABLE , RUNNING , BLOCKED/WAITING , TERMINATED
		System.out.println("Thread State : " + thread.getState());
		
		thread.notify();
		
		System.out.println("Thread State : " + thread.getState());

		System.out.println("Thread Id : " + thread.getId());

		System.out.println("Thread Name : " + thread.getName());

		System.out.println("Thread Priority : " + thread.getPriority());

		System.out.println("Thread State : " + thread.getState());
		
		if (thread.isDaemon()) {
			System.out.println("*" + thread.getName() + " is Daemon Thread");
		}

		System.out.println("Thread Group : " + thread.getThreadGroup());

		//Creating a ThreadGroup
		ThreadGroup threadGroup = new ThreadGroup("Group-1A");

		//Adding Threads to ThreadGroup
		Thread thread1 = new Thread(threadGroup, "Thread-1");
		Thread thread2 = new Thread(threadGroup, "Thread-2");
		Thread thread3 = new Thread(threadGroup, "Thread-3");
		Thread thread4 = new Thread(threadGroup, "Thread-4");
		Thread thread5 = new Thread(threadGroup, "Thread-5");

		//Starting threads
		thread1.start();
		thread2.start();
		thread3.start();
		thread4.start();
		thread5.start();

		System.out.println("Threads Active Count in threadGroup : " + threadGroup.activeCount());

		System.out.print("Thread Details in threadGroup : ");
		threadGroup.list();

		

	}
}
